<?php

/**
 * @file
 * Contains install and update functions for sync.
 */

use Drupal\Core\Database\Database;

/**
 * Implements hook_schema().
 *
 * Defines the database tables used by this module.
 *
 * @see hook_schema()
 *
 * @ingroup sync
 */
function sync_schema() {
  $schema['sync'] = [
    'description' => 'Stores synced entities.',
    'fields' => [
      'id' => [
        'type' => 'varchar_ascii',
        'length' => 255,
        'not null' => TRUE,
        'default' => 0,
        'description' => "The sync id.",
      ],
      'entity_type' => [
        'type' => 'varchar_ascii',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The entity type.',
      ],
      'entity_id' => [
        'type' => 'varchar_ascii',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => "The entity id.",
      ],
      'locked' => [
        'description' => 'Boolean indicating whether the entity is locked and should not be synced.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
        'size' => 'tiny',
      ],
    ],
    'primary key' => ['id', 'entity_type'],
    'indexes' => [
      'entity_type' => ['entity_type'],
      'entity_id' => ['entity_id'],
    ],
  ];
  $schema['sync_data'] = [
    'description' => 'Stores sync data.',
    'fields' => [
      'id' => [
        'type' => 'varchar_ascii',
        'length' => 255,
        'not null' => TRUE,
        'default' => 0,
        'description' => "The sync id.",
      ],
      'segment' => [
        'type' => 'varchar_ascii',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The sync group',
      ],
      'changed' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Unix timestamp of when the entity was last updated',
      ],
    ],
    'primary key' => ['id', 'segment'],
  ];
  return $schema;
}

/**
 * Convert entity_id column to varchar to support config entity ids.
 */
function sync_update_8001() {
  $schema = Database::getConnection()->schema();
  $schema->changeField('sync', 'entity_id', 'entity_id', [
    'type' => 'varchar_ascii',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
    'description' => "The entity id.",
  ]);
}

/**
 * Rename group field to segment if necessary.
 */
function sync_update_8002() {
  $database = Database::getConnection();
  $sql = "SHOW COLUMNS FROM `sync_data` LIKE 'group';";
  if ($database->query($sql)->fetchAssoc()) {
    $database->schema()->changeField('sync_data', 'group', 'segment', [
      'type' => 'varchar_ascii',
      'length' => 255,
      'not null' => TRUE,
      'default' => '',
      'description' => 'The sync group',
    ], []);
  }
}
